% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combine_header_rows.R
\name{combine_header_rows}
\alias{combine_header_rows}
\title{combine_header_rows}
\usage{
combine_header_rows(
  dat,
  combine_start_row_identifier,
  combine_end_row_identifier
)
}
\arguments{
\item{dat}{Tidyxl format dataframe (Data imported with tidyxl::xlsx_cells,
which have one row for each cell).}

\item{combine_start_row_identifier}{(str). A word or pattern that first
appears in the first of the header rows that needs to be combined.}

\item{combine_endt_row_identifier}{(str). A word or pattern that first
appears in the last of the header rows that needs to be combined.}
}
\value{
dat with rows up to the end_row_identifier row concatenated onto the
start_row_identifier row for each column. Of the concatenated rows, only the
first is kept, the others are removed from the data.
}
\description{
Combine header rows that are meant to be one row.
}
\details{
Combine header rows that are meant to be one row.

Use patterns passed from the data dictionary to find the first and last of
the rows that need to be combined into a single value (per column), and
concatenate those values.

This was written to address an issue in the England NNDR and council tax
data (the diff spreadsheet).
}
\examples{

|      || this    || another |
|      ||---------||---------|
|      || is one  || heading |
|      ||---------||---------|
| year || heading || here    |
|------||---------||---------|
| 2020 ||   1162  ||  1034   |

The data shown above is input by xlsx_cells to look like this (order is important):

dat <- data.frame(
    "row" = c(1, 1, 2, 2, 3, 3, 3, 4, 4, 4),
    "col" = c(2, 3, 2, 3, 1, 2, 3, 1, 2, 3),
    "character" = c( "this", "another", "is one", "heading", "year", "heading", "here", NA, NA, NA),
    "numeric" = c(rep(NA, 7), 2020, 1162, 1034),
    "data_type" = c(rep("character", 7), rep("numeric", 3))
)

result <- combine_header_rows(dat, "this", "here")

# view in a normal layout (this will reintroduce removed rows as blanks):
rectify(result)
}
\author{
Emma Wood \email{emma.wood@ons.gov.uk}

Mark London \email{mark.london@ext.ons.gov.uk}
}
