% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reformat_single_header_data.R
\name{reformat_single_header_data}
\alias{reformat_single_header_data}
\title{reformat_single_header_data}
\usage{
reformat_single_header_data(
  dat,
  columns,
  left_headers,
  first_header_row,
  split_points,
  tolerance_list = c(tolerance_numeric = 0.4, tolerance_char = 0.7, tolerance_blank =
    0.9)
)
}
\arguments{
\item{dat}{tidyxl::xlsx_cells table.}

\item{columns}{vector of strings. group_col then nested_column_1 (optional)
then nested_column_2. Order is important}

\item{first_header_row}{integer. Row number of the first header row}

\item{split_points}{where to split}

\item{vector}{of strings or NA. optional. Names of headers in the left block. If used it must be the correct length for the data}
}
\value{
tibble. Tidy dataframe.
}
\description{
Reformat data with one header row
}
\details{
Reformat data with one header row

Used for cases where data have only one header row, but two blocks that are
treated differently:

The column names of the block of data on the left (in the original table) are
carried over to the output.

The block of data on the right is changed from wide format to long, so the
original column names become entries in two new columns (group_row and
nested_column_1)

This is used for e.g. dluhc revenue expenditure final data in 2021-22.
}
\examples{
    harmonised <- reformat_single_header_data(for_reformatting,
                    columns, left_headers, first_header_row, split_points)

}
\author{
Emma Wood \email{emma.wood@ons.gov.uk}

Mark London \email{mark.london@ext.ons.gov.uk}
}
